FORMAT: 1A
HOST: https://cdn.contentful.com
# Content Delivery API

The Contentful Delivery API is a _fast_ read-only API for retrieving your content from Contentful. Content is delivered as JSON data; images, videos and other media is delivered as files.

It is powered by our global CDN so you get the benefits of our content-aware caching: All content, both JSON and binary, is served from the server closest to where a user is requesting content from. This minimizes latency, which especially mobile apps can greatly benefit from. Also, hosting content in multiple datacenters around the world greatly improves the availability of content.

## Authentication

To get content from the Content Delivery API, clients need to provide an access token. Access tokens are created per Space and are used by clients to access the Space's content.

You can create Access tokens for your own Spaces in the "API" tab of the Contentful Web App.

The Content Delivery API implements the standardized OAuth 2.0 Bearer Token Specification. This authorization scheme is very simple and already supported by many HTTP clients.

The API supports two mechanisms for supplying the access token.

As an Authorization HTTP request-header field and as an URI query parameter named `access_token`.

## API rate limits

On the Content Delivery API there are no limits enforced on requests that hit the cache (i.e. a cache hit does not count towards rate limit and an unlimited amount of cache hits can be done). Nonetheless, there is still a rate limit of approximately 80 requests per seconds on the origin.

The limit exists to prevent unlimited usage and ensure the consumption of resources that a single account can exercise is limited. The rate limit is implemented through a standard mechanism of the HTTP protocol (returning response code 429). Keep in mind that there are internal layers of caching close to the origin that again do not contribute to the rate limit.

## Common Resource Attributes

Every resource returned by the Content Delivery API will have a `sys` property, which is an object containing system managed metadata. The exact metadata available depends on the type of the resource, but at minimum the `sys.type` property is defined.

Note that none of the `sys` fields are editable and only the `sys.id` field can be specified in the creation of an item (as long as it is not a Space).

The `sys.id` property will be defined for every resource that is not a collection. For example, a `Space` resource will have a `sys.type` and `sys.id`:

```
{
  "sys": {
    "type": "Space",
    "id": "cfexampleapi"
  }
}
```

Field          |Type          |Description                     |Applies to
---------------|--------------|--------------------------------|-----------------------------
sys.type       |String        |Type of resource.               |All
sys.id         |String        |Unique ID of resource.          |All except Arrays
sys.space      |Link          |Link to resource's Space.       |Entries, Assets, Content Types
sys.contentType|Link          |Link to Entry's Content Type.   |Entries
sys.revision   |Integer       |Published version of resource.* |Entries, Assets, Content Types
sys.createdAt  |Date          |Time resource was created.      |Entries, Assets, Content Types
sys.updatedAt  |Date          |Time resource was updated.      |Entries, Assets, Content Types
sys.locale     |String        |Locale of the resource.         |Entries and Assets

* Observation: the `revision` field refers to the published version exposed by the Content Management API.

:[Collection Resources and Pagination](_partials/collections-and-pagination.md)

:[Shared Preview/Delivery Docs](_partials/delivery-and-preview-resources.apib tokentype:"A *production* Content Delivery API Key.")

:[Sync API Docs](_partials/sync-resources.apib tokentype:"A *production* Content Delivery API Key.")

:[Data Structures](_partials/delivery-and-preview-data-structures.apib)
