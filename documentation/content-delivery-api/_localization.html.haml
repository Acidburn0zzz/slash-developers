= title_anchor 'h2', "i18n", "Localization"

- # TODO: we also had a parameter to serve all locales at ones nested?
- # TODO: explain that we localize by field

:markdown
  Specify requested locale as `locale` URI query parameter.

  Let's look at Nyan Cat in Klingon:

= language_specific 'java' do
  = language_block :java do
    :plain
      client.entries().async().fetchAll(
          new HashMap<String, String>() {{
            put("sys.id", "nyancat");
            put("locale", "tlh");
          }},

          new CDACallback<CDAArray>() {
            @Override
            protected void onSuccess(CDAArray result) {
              CDAEntry entry = (CDAEntry) result.getItems().get(0);
              System.out.println(entry.getFields().get("name"));
            }
          });

  :markdown
    Produces the following output:

        Nyan vIghro'

= language_specific 'javascript', 'http' do

  = language_block :shell do
    = curl path: "/spaces/#{space}/entries/nyancat?locale=tlh"

  = language_block :json do
    :plain
      {
        "sys": {
          "locale": "tlh"
          ...
        },
        "fields": {
          "name": "Nyan vIghro'"
          ...
        }
      }

= language_specific 'objc' do

  = language_block :objc do
    :plain
      [client fetchEntriesMatching:@{ @"sys.id": @"nyancat",
                                      @"locale": @"tlh" }
                           success:^(CDAResponse *response, CDAArray *array) {
                               NSLog(@"%@", [[array.items firstObject] fields]);
                               [NSApp terminate:nil];
                           } failure:^(CDAResponse *response, NSError *error) {
                               NSLog(@"Error: %@", error);
                               [NSApp terminate:nil];
                           }];

= language_specific 'swift' do
  = language_block :swift do
    :plain
      client.fetchEntriesMatching([ "sys.id": "nyancat", "locale": "tlh" ],
        success: { (response: CDAResponse!, array: CDAArray!) -> Void in
          println((array.items[0] as CDAEntry).fields["name"])
        },
        failure: { (response: CDAResponse!, error: NSError!) -> Void in 
          println(error) 
        })

= language_specific 'objc', 'swift' do
  = language_block :objc do
    :plain
      {
        name = "Nyan vIghro'";
      }



= language_specific 'ruby' do
  = language_block :ruby do
    :plain
      client.entries('sys.id' => 'nyancat', 'locale' => 'tlh')

:markdown
  `fields.name` is the only localized Field in the cat Content Type,
  so all other Fields are returned in the default locale.

  The locale has to be supported by the Space that's being queried.

  The default locale depends on the Space.
