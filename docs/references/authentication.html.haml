---
page: :docsAuthentication
---

:markdown
  This is an essential read for getting started with Contentful and setting up your first *Hello, World* app.

  ## General

  To get content from Contentful or store data in it, an app should authenticate with an with an OAuth bearer token. Contentful offers four APIs (more about that on the [APIs](#{developer_docs_url}concepts/apis/) page), and each of them require separate authentication – except for the Images API, which delivers images without authentication.

  There are two ways of sending the authentication token to an API: you can include it either as a query parameter `access_token=$token` or an HTTP header `Authorization: Bearer $token`.

  ~~~ bash
  # As a query parameter:
  $ curl -v https://cdn.contentful.com/spaces/cfexampleapi/entries?access_token=b4c0n73n7fu1curl

  # As a header:
  $ curl -v https://cdn.contentful.com/spaces/cfexampleapi/entries -H 'Authorization: Bearer b4c0n73n7fu1'
  ~~~

  If you fail to include a valid access token, you will receive an error like so:

  ~~~ bash
  # Request
  $ curl https://cdn.contentful.com/spaces/cfexampleapi/entries?access_token=wrong

  # Response
  {
    "sys": {
      "type": "Error",
      "id": "AccessTokenInvalid"
    },
    "message": "The access token you sent could not be found or is invalid.",
    "requestId": "bcc-1808911724"
  }
  ~~~

  If you include a valid access token, but one that is not able to access a resource, you will get a 404:

  ~~~ bash
  # Request
  $ curl https://cdn.contentful.com/spaces/some_other_space/entries?access_token=b4c0n73n7fu1

  # Response
  {
    "sys": {
      "type": "Error",
      "id": "NotFound"
    },
    "message": "The resource could not be found.",
    "details": {
      "sys": {
        "type": "Space"
      }
    },
    "requestId": "9f3-2148374087"
  }
  ~~~

  The sections below explain how to obtain the token for different APIs.

  Most likely you wouldn't need to send the token manually. We provide SDKs for a lot of platforms and languages, and they know how to authenticate with Contentful, so you don't have to write extra code. Please [see the available SDKs](#{developer_docs_url}code/libraries/) – most likely there's one for you. Set it up with the token and you're done.

  ## The Delivery API and Preview API

  These two APIs use the access token which you manually create in the Contentful web interface. [Go to the app](https://app.contentful.com), open the space that you want to access (top left corner lists all the spaces), and navigate to the *APIs* area. Open the *API Keys* section and create your first token. Done.

  <!-- TODO: screenshot(s) would be nice -->

  Two things to keep in mind: first, a token provides read-only access to a single space – that is, you need to obtain a new token for every new space that you want to access. Second, we recommend using different access tokens for different applications or delivery channels: for example, one for iOS app and another for Android app. One of the reasons is to be able to revoke them individually in the future: with several tokens you can manipulate your delivery channels independently.

  ## The Management API

  To access the Management API – that is, to put content in Contentful from your apps – you need to get an OAuth 2.0 token that would represent your account. Naturally, this token will have the same rights as the owner of the account.

%login-form
  .ng-cloak
    %div{'ng-hide' => 'auth'}
      %p
        This page contains a JavaScript app which helps you get an authentication token from your account. Please log in, and the token will appear below.
      %p
        .btn.btn--large.btn--expanded.btn--blue{'ng-click' => 'login()'}
          Login to get the token

    %div{'ng-show' => 'auth'}
      %div{'ng-show' => 'auth.message'}
        %p
          Something went wrong during login, please refresh the page to try again.
          If the problem persists, please [get in touch](#getting-help) and include the following error message:
          {{auth.message}}
        %p
          .btn.btn--large.btn--expanded.btn--blue{'ng-click' => 'login()'}
            Try login again

      %div{'ng-show' => 'auth.user'}
        %p
          Logged in as {{auth.user.firstName}}. Here's your OAuth access token:
          %code
            {{auth.accessToken}}
        %p
          This access token should only be used for learning and testing purposes. Please create a separate OAuth application for production usage.
        %p
          .btn.btn--large.btn--expanded.btn--blue{'ng-click' => 'logout()'}
            Logout

:markdown
  If you would want to create apps for changing content stored in Contentful, you would need to create a custom OAuth application. See more information on that in the section below.

  ## Creating an OAuth 2.0 application

  Here are some examples where it would make sense to build an OAuth 2.0 application:

  - A JavaScript web app requesting permission to manage content in Contentful on behalf of a user
  - An API building on top of the Content Management API
  - A script (say, an import script) which creates entries and uploading assets
  - Automated tests of the API

  Having your own OAuth 2.0 application has a number of benefits:

  - OAuth 2.0 access tokens will be linked to your app
  - You can request the right OAuth 2.0 scopes for your application (`content_management_read` or `content_management_manage`)
  - You can specify a custom redirect URI that will receive the access token as part of the URI's hash fragment
  - You can specify a custom name and description

  [Create a new OAuth 2.0 application](https://app.contentful.com/account/profile/developers/applications/new)

  ## Requesting an OAuth 2.0 Access Token

  After having created an OAuth 2.0 application, you can use it to request OAuth 2.0 access tokens.

  - First, redirect to Contentful's OAuth 2.0 endpoint URI (see below).
    This will present a web page where logged in Contentful users can authorize your application to access their content.

  ~~~ plain
  https://be.contentful.com/oauth/authorize?response_type=token&client_id=$YOUR_APPS_CLIENT_ID&redirect_uri=$YOUR_APPS_REDIRECT_URL&scope=content_management_manage"
  ~~~

  - Second, handle the callback from Contentful to your app:
    After user makes a choice, Contentful will redirect back to your app
    redirect URI. The URI leading to your app will look similar to example below.
    You have to extract that access token from the URI's hash fragment.

  ~~~ plain
  http://localhost:8080/my-app/#access_token=$CONTENT_MANAGEMENT_API_ACCESS_TOKEN
  ~~~

  - Third and last, keep the extracted access token for future usage.
    You are now be able to make Content Management API requests on behalf of the authenticated user.

= javascript_include_tag 'lib/angular.min.js'
= javascript_include_tag 'cma_docs/bundle.js'
